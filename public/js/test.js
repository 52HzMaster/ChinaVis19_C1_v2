/**
 * Created by Liang Liu on 2019/4/1.
 */
test();
function test() {

    let floor = $("#all_view");

    let gridSize_w = (floor.width() -100) / 30;
    let gridSize_h = (floor.height()-100) / 16;

    let card_x = 30;
    let card_y = 16;

    let width = gridSize_w * card_x;
    let height = gridSize_h * card_y;

    let test = {};

    let floor_data = [];
    for (let i = 0; i < card_x; i++)
        for (let j = 0; j < card_y; j++)
            floor_data.push({x: i, y: j});

    let traj1 =[[13, 0], [13, 1], [14, 2], [14, 3], [14, 4], [13, 5], [13, 6]];

    let traj3 =[[13, 0], [13, 1], [14, 2], [14, 3], [14, 4], [13, 5], [13, 6],
        [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12], [14, 13], [13, 14],
        [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [13, 21], [13, 22],
        [12, 23], [11, 23], [10, 23], [9, 23], [8, 23], [8, 24], [8, 25], [8, 26], [8, 25],
        [8, 24], [8, 23], [9, 23], [9, 22], [9, 21], [10, 21], [10, 20], [10, 21], [9, 21],
        [8, 21], [9, 21], [9, 22], [9, 23], [10, 23], [10, 24], [10, 25], [11, 25], [12, 25],
        [12, 26], [13, 27], [13, 28], [14, 28], [13, 28], [13, 27], [13, 26], [13, 25],
        [13, 24], [13, 23], [13, 22], [13, 21], [14, 20], [14, 19], [14, 18], [13, 17],
        [13, 16], [13, 15], [13, 14], [13, 13], [12, 12], [12, 11], [12, 10], [11, 9],
        [10, 9], [9, 9], [8, 9], [7, 8], [8, 7], [8, 8], [9, 8], [10, 9], [11, 9],
        [12, 10], [13, 11], [13, 12], [13, 13], [12, 14], [13, 15], [13, 16], [13, 17],
        [13, 18], [13, 19], [13, 20], [12, 20], [12, 21], [12, 22], [12, 23], [12, 24],
        [12, 25], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [7, 26], [7, 25],
        [8, 25], [9, 25], [10, 25], [11, 25], [11, 24], [11, 23], [11, 22], [11, 21],
        [12, 21], [12, 20], [12, 19], [12, 18],
        [13, 17], [13, 16], [14, 16], [14, 15], [15, 15]
    ];

    let traj =[
        [15, 2], [14, 2], [13, 3], [14, 4], [14, 5], [13, 6], [13, 7], [13, 8], [13, 9], [13, 10],
        [13, 11], [13, 12], [14, 13], [14, 14], [13, 14], [13, 15], [13, 16], [13, 17], [14, 18], [13, 19],
        [13, 20], [12, 21], [12, 22], [12, 23], [12, 24], [12, 25], [12, 26], [12, 25], [11, 25], [10, 25],
        [9, 25], [8, 25], [8, 26], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [13, 26], [13, 27],
        [14, 27], [13, 27], [13, 26], [12, 25], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [6, 25],
        [6, 26], [6, 25], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [12, 26], [13, 27],
        [14, 27], [15, 27], [14, 27], [13, 27], [13, 26], [13, 25], [13, 24], [13, 23], [13, 22], [13, 21],
        [13, 20], [12, 19], [12, 18], [13, 18], [12, 17], [11, 17], [10, 18], [9, 18], [8, 18], [7, 17],
        [6, 16], [5, 16], [4, 16], [5, 17], [6, 17], [7, 18], [8, 18], [9, 18], [10, 18], [11, 17], [12, 17],
        [12, 18], [12, 19], [12, 20], [12, 21], [11, 21], [10, 21], [9, 21], [8, 21], [9, 21], [10, 21],
        [11, 21], [12, 21], [13, 20], [14, 19], [14, 18], [14, 17], [14, 16], [14, 15], [15, 15]
    ];

    let traj_10001 = [[15, 2], [14, 2], [13, 3], [14, 3], [14, 4], [13, 5], [12, 6], [11, 6], [10, 6], [9, 6], [9, 5], [8, 5], [8, 6], [8, 7], [7, 8], [7, 9], [6, 9], [5, 9], [4, 9], [4, 10], [4, 9], [3, 8], [4, 9], [5, 9], [6, 9], [7, 9], [8, 8], [9, 8], [10, 9], [11, 9], [12, 9], [13, 10], [14, 11], [14, 10], [14, 11], [14, 10], [14, 9], [14, 8], [14, 7], [14, 6], [14, 5], [14, 4], [14, 3], [14, 2], [15, 2], [15, 1], [15, 2], [14, 3], [14, 4], [14, 5], [14, 6], [14, 7], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 11], [13, 10], [12, 9], [11, 8], [10, 7], [9, 6], [9, 5], [9, 4], [9, 3], [9, 4], [9, 5], [9, 6], [10, 6], [10, 7], [11, 8], [12, 9], [12, 10], [13, 11], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [14, 16], [14, 17], [15, 17]]
    let traj_10002 = [[15, 2], [14, 2], [14, 3], [13, 4], [14, 4], [13, 5], [13, 6], [13, 7], [14, 8], [13, 9], [13, 10], [13, 11], [13, 12], [13, 13], [13, 14], [13, 15], [14, 16], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [12, 21], [11, 21], [10, 21], [10, 22], [10, 21], [11, 21], [12, 21], [12, 20], [12, 19], [12, 18], [13, 17], [14, 16], [14, 15], [14, 14], [13, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 9], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [4, 10], [4, 11], [4, 10], [4, 9], [5, 8], [6, 8], [7, 8], [8, 9], [9, 9], [10, 9], [11, 9], [12, 9], [13, 10], [14, 10], [14, 11], [14, 10], [14, 11], [13, 12], [13, 13], [12, 14], [12, 15], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [13, 21], [13, 22], [13, 23], [12, 24], [12, 25], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [7, 26], [7, 25], [7, 24], [7, 23], [8, 23], [9, 23], [10, 23], [11, 23], [11, 22], [11, 21], [12, 21], [13, 20], [13, 19], [13, 18], [13, 17], [12, 17], [11, 17], [10, 16], [9, 15], [10, 15], [11, 15], [11, 16], [11, 17], [12, 17], [12, 18], [12, 19], [12, 20], [12, 21], [12, 22], [12, 23], [11, 23], [10, 23], [9, 23], [9, 24], [9, 25], [10, 25], [11, 25], [12, 25], [13, 25], [13, 26], [13, 27], [13, 28], [14, 28], [15, 28], [14, 28], [13, 28], [13, 27], [13, 26], [12, 25], [13, 24], [13, 23], [13, 22], [13, 21], [13, 20], [13, 19], [13, 18], [13, 17], [13, 16], [13, 15], [13, 14], [13, 13], [13, 12], [12, 11], [12, 10], [13, 10], [14, 9], [14, 8], [14, 7], [14, 6], [14, 5], [15, 5]]
    let traj_10003 = [[13, 0], [13, 1], [14, 2], [14, 3], [14, 4], [13, 5], [13, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12], [14, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [13, 21], [13, 22], [12, 23], [11, 23], [10, 23], [9, 23], [8, 23], [8, 24], [8, 25], [8, 26], [8, 25], [8, 24], [8, 23], [9, 23], [9, 22], [9, 21], [10, 21], [10, 20], [10, 21], [9, 21], [8, 21], [9, 21], [9, 22], [9, 23], [10, 23], [10, 24], [10, 25], [11, 25], [12, 25], [12, 26], [13, 27], [13, 28], [14, 28], [13, 28], [13, 27], [13, 26], [13, 25], [13, 24], [13, 23], [13, 22], [13, 21], [14, 20], [14, 19], [14, 18], [13, 17], [13, 16], [13, 15], [13, 14], [13, 13], [12, 12], [12, 11], [12, 10], [11, 9], [10, 9], [9, 9], [8, 9], [7, 8], [8, 7], [8, 8], [9, 8], [10, 9], [11, 9], [12, 10], [13, 11], [13, 12], [13, 13], [12, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [12, 20], [12, 21], [12, 22], [12, 23], [12, 24], [12, 25], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [7, 26], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [11, 24], [11, 23], [11, 22], [11, 21], [12, 21], [12, 20], [12, 19], [12, 18], [13, 17], [13, 16], [14, 16], [14, 15], [15, 15]]
    let traj_10004 = [[15, 4], [14, 4], [13, 3], [14, 4], [13, 5], [12, 6], [11, 6], [10, 6], [10, 7], [10, 8], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [4, 10], [4, 11], [4, 10], [4, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 10], [13, 11], [13, 12], [13, 13], [13, 14], [13, 15], [12, 16], [11, 16], [10, 17], [9, 16], [9, 17], [8, 18], [7, 18], [7, 17], [8, 18], [9, 18], [10, 18], [11, 18], [11, 17], [12, 17], [12, 18], [12, 19], [12, 20], [12, 21], [12, 22], [12, 23], [11, 23], [10, 23], [9, 23], [8, 23], [7, 23], [7, 22], [7, 21], [6, 21], [7, 21], [7, 22], [7, 23], [7, 24], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [13, 25], [13, 26], [13, 27], [13, 28], [14, 28], [13, 28], [12, 27], [12, 26], [12, 25], [11, 25], [11, 24], [11, 23], [10, 23], [9, 23], [9, 22], [9, 21], [10, 21], [11, 21], [12, 21], [13, 20], [14, 20], [14, 19], [14, 18], [14, 17], [14, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [14, 9], [14, 8], [14, 7], [14, 6], [14, 5], [13, 4], [13, 3], [13, 2], [13, 3], [14, 4], [14, 5], [14, 6], [14, 7], [13, 8], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [14, 12], [13, 12], [13, 13], [12, 14], [12, 15], [13, 16], [13, 17], [13, 18], [14, 19], [13, 20], [13, 21], [13, 22], [14, 22], [15, 22], [15, 23], [14, 24], [13, 24], [13, 25], [13, 26], [13, 27], [13, 28], [14, 28], [15, 28], [14, 28], [13, 28], [12, 27], [12, 26], [12, 25], [11, 25], [11, 24], [11, 23], [10, 23], [9, 23], [8, 23], [7, 23], [7, 22], [7, 21], [6, 21], [5, 21], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [11, 21], [12, 21], [13, 20], [12, 19], [12, 18], [13, 17], [14, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 9], [11, 8], [11, 7], [10, 7], [9, 7], [8, 6], [8, 5], [9, 4], [9, 5], [8, 5], [8, 6], [9, 6], [10, 7], [11, 7], [12, 7], [12, 8], [13, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 10], [13, 9], [14, 8], [14, 7], [14, 6], [14, 5], [15, 5]]
    let traj_10005 = [[15, 2], [14, 2], [13, 3], [14, 4], [13, 5], [14, 6], [13, 6], [13, 7], [13, 8], [13, 9], [13, 10], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 10], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 8], [5, 8], [4, 7], [3, 7], [2, 7], [3, 8], [4, 8], [5, 8], [6, 8], [7, 8], [8, 9], [9, 9], [10, 9], [11, 9], [12, 9], [13, 10], [14, 10], [14, 11], [14, 10], [14, 11], [14, 12], [14, 13], [14, 14], [14, 15], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [12, 20], [12, 21], [11, 21], [10, 21], [9, 21], [10, 21], [11, 21], [12, 21], [13, 20], [13, 19], [13, 18], [12, 17], [11, 17], [10, 18], [11, 17], [12, 17], [12, 18], [12, 19], [12, 20], [12, 21], [11, 21], [10, 21], [9, 21], [9, 22], [9, 23], [9, 24], [9, 23], [9, 22], [9, 21], [8, 21], [7, 21], [6, 21], [5, 21], [5, 20], [5, 21], [6, 21], [7, 21], [7, 22], [7, 23], [7, 24], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [12, 26], [13, 27], [14, 27], [15, 27], [14, 27], [13, 27], [13, 26], [13, 25], [13, 24], [13, 23], [13, 22], [13, 21], [12, 20], [12, 19], [12, 18], [13, 17], [13, 16], [13, 15], [13, 14], [13, 13], [13, 12], [13, 11], [12, 10], [12, 9], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [5, 10], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 10], [12, 11], [13, 12], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [12, 20], [12, 21], [11, 21], [10, 21], [9, 21], [8, 21], [7, 21], [6, 21], [5, 21], [5, 22], [5, 21], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [11, 21], [12, 21], [12, 20], [12, 19], [13, 18], [13, 17], [13, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 9], [11, 8], [10, 8], [9, 7], [9, 6], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [7, 7], [6, 8], [5, 8], [5, 9], [5, 10], [5, 11], [5, 10], [5, 9], [6, 9], [6, 8], [7, 8], [8, 7], [9, 7], [10, 6], [11, 6], [12, 6], [13, 6], [14, 6], [14, 5], [15, 4], [15, 3], [15, 4], [14, 5], [14, 6], [14, 7], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 10], [12, 9], [12, 8], [12, 7], [11, 8], [10, 7], [9, 6], [9, 5], [9, 4], [9, 3], [9, 2], [9, 3], [8, 3], [8, 4], [8, 5], [8, 6], [7, 7], [6, 8], [5, 9], [5, 10], [5, 9], [6, 8], [7, 8], [8, 9], [9, 9], [10, 9], [11, 9], [12, 9], [12, 10], [13, 10], [14, 11], [14, 10], [14, 11], [14, 10], [13, 9], [12, 9], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [5, 10], [5, 11], [5, 10], [5, 9], [6, 9], [7, 9], [8, 8], [9, 8], [10, 7], [11, 6], [12, 6], [13, 6], [14, 6], [14, 5], [14, 4], [14, 3], [14, 4], [14, 5], [14, 6], [14, 7], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 11], [12, 10], [11, 9], [10, 8], [9, 9], [9, 10], [8, 10], [7, 10], [7, 9], [6, 8], [5, 7], [4, 8], [4, 7], [3, 7], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [8, 5], [8, 6], [7, 7], [6, 8], [5, 9], [5, 10], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 10], [12, 11], [12, 12], [12, 13], [13, 13], [13, 14], [14, 15], [15, 15]]
    let traj_10006 = [[13, 0], [13, 1], [14, 2], [13, 3], [14, 3], [14, 4], [14, 5], [14, 6], [14, 7], [14, 8], [13, 8], [13, 9], [13, 10], [13, 11], [14, 12], [14, 13], [13, 14], [13, 15], [14, 16], [14, 17], [14, 18], [14, 19], [13, 18], [12, 17], [11, 17], [10, 18], [9, 18], [10, 18], [11, 17], [12, 17], [12, 18], [12, 19], [12, 20], [12, 21], [11, 21], [10, 21], [9, 21], [8, 21], [7, 21], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [11, 21], [12, 21], [13, 20], [13, 19], [13, 18], [14, 17], [14, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [14, 9], [13, 9], [12, 9], [12, 8], [12, 7], [11, 7], [10, 7], [9, 6], [8, 6], [7, 6], [6, 6], [5, 6], [5, 5], [4, 5], [4, 4], [3, 4], [2, 3], [2, 2], [3, 2], [4, 3], [5, 4], [6, 5], [7, 5], [8, 5], [8, 6], [9, 7], [10, 7], [11, 8], [12, 9], [13, 10], [14, 10], [14, 11], [14, 10], [14, 11], [13, 10], [12, 9], [12, 8], [13, 7], [13, 6], [14, 6], [14, 5], [15, 5]]
    let traj_10007 = [[15, 7], [14, 7], [13, 8], [12, 9], [11, 9], [11, 10], [11, 9], [12, 10], [12, 11], [12, 12], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [14, 18], [14, 19], [13, 20], [12, 21], [11, 21], [10, 21], [9, 21], [8, 21], [7, 21], [6, 21], [5, 21], [4, 21], [4, 20], [4, 19], [3, 19], [2, 19], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 11], [1, 10], [2, 9], [3, 9], [4, 9], [5, 9], [5, 10], [5, 9], [4, 9], [3, 9], [2, 9], [2, 10], [1, 10], [1, 11], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [2, 19], [3, 19], [4, 19], [4, 20], [4, 19], [3, 19], [2, 19], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [2, 11], [3, 10], [4, 9], [5, 9], [5, 10], [5, 9], [4, 9], [3, 8], [4, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 10], [12, 11], [13, 12], [13, 13], [13, 14], [13, 15], [14, 16], [13, 17], [13, 18], [14, 19], [13, 19], [13, 20], [13, 21], [13, 22], [14, 22], [14, 23], [14, 22], [13, 22], [13, 21], [13, 20], [13, 19], [13, 18], [14, 17], [13, 16], [13, 15], [12, 14], [12, 13], [12, 12], [12, 11], [12, 10], [11, 9], [11, 10], [11, 9], [12, 10], [13, 11], [12, 12], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [13, 20], [12, 21], [12, 22], [12, 23], [11, 23], [11, 24], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [6, 25], [5, 25], [4, 25], [4, 26], [4, 25], [4, 24], [4, 23], [4, 22], [4, 21], [4, 20], [4, 19], [3, 19], [2, 19], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 11], [1, 10], [2, 10], [2, 9], [3, 8], [3, 7], [4, 7], [5, 6], [5, 5], [6, 4], [7, 3], [8, 2], [9, 2], [8, 3], [8, 4], [7, 4], [7, 5], [6, 5], [5, 5], [5, 6], [4, 7], [3, 8], [2, 8], [2, 9], [1, 10], [1, 11], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [2, 19], [2, 20], [3, 21], [3, 22], [3, 23], [3, 24], [3, 25], [4, 25], [5, 25], [6, 25], [7, 25], [8, 25], [9, 25], [10, 25], [11, 25], [12, 25], [13, 26], [13, 27], [14, 27], [13, 27], [13, 26], [13, 25], [13, 24], [13, 23], [13, 22], [13, 21], [13, 20], [13, 19], [13, 18], [13, 17], [13, 16], [13, 15], [12, 14], [12, 13], [12, 12], [12, 11], [12, 10], [11, 9], [11, 10], [10, 11], [11, 10], [11, 9], [10, 9], [9, 9], [9, 8], [8, 8], [8, 7], [8, 6], [7, 6], [6, 6], [5, 6], [4, 6], [3, 6], [2, 6], [3, 6], [4, 6], [5, 7], [6, 7], [7, 6], [8, 7], [9, 8], [10, 9], [11, 9], [11, 10], [11, 9], [10, 9], [10, 8], [9, 7], [8, 6], [7, 6], [6, 6], [5, 6], [4, 6], [3, 6], [2, 6], [2, 5], [2, 4], [2, 5], [2, 6], [3, 7], [4, 7], [5, 8], [5, 9], [5, 10], [5, 11], [5, 10], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [11, 10], [10, 11], [11, 10], [11, 9], [10, 9], [9, 9], [9, 10], [8, 10], [7, 11], [8, 10], [9, 10], [9, 9], [10, 9], [11, 9], [11, 10], [10, 10], [11, 10], [11, 9], [10, 8], [9, 7], [8, 6], [7, 6], [6, 6], [5, 6], [4, 6], [3, 6], [3, 5], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [9, 7], [10, 8], [10, 9], [11, 9], [11, 10], [11, 11], [11, 10], [11, 9], [10, 8], [9, 9], [8, 9], [7, 9], [7, 10], [6, 11], [7, 11], [8, 11], [9, 10], [9, 9], [10, 9], [11, 9], [11, 10], [10, 10], [11, 10], [11, 9], [10, 9], [9, 8], [8, 8], [7, 7], [6, 6], [5, 6], [4, 6], [3, 6], [3, 5], [3, 4], [2, 4], [2, 3], [2, 2], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [3, 7], [3, 8], [2, 8], [2, 9], [2, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [0, 19]]
    let traj_10008 = [[15, 2], [14, 2], [13, 2], [14, 2], [14, 3], [14, 4], [13, 5], [13, 6], [13, 7], [13, 8], [13, 9], [13, 10], [13, 11], [13, 12], [13, 13], [13, 14], [13, 15], [12, 16], [11, 16], [10, 15], [9, 16], [9, 17], [10, 18], [11, 17], [12, 17], [12, 18], [12, 19], [12, 20], [12, 21], [12, 22], [12, 23], [11, 23], [11, 24], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [7, 24], [7, 23], [7, 22], [7, 21], [6, 21], [6, 20], [6, 21], [7, 21], [8, 21], [9, 21], [10, 21], [11, 21], [12, 21], [12, 20], [12, 19], [12, 18], [13, 17], [13, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 9], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [5, 10], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 8], [12, 8], [13, 7], [13, 6], [14, 6], [14, 5], [14, 6], [14, 7], [13, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 12], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [12, 19], [12, 20], [12, 21], [12, 22], [12, 23], [11, 23], [10, 23], [9, 23], [8, 23], [8, 24], [8, 23], [9, 23], [10, 23], [10, 22], [10, 21], [11, 21], [12, 21], [13, 20], [13, 19], [13, 18], [13, 17], [13, 16], [13, 15], [13, 14], [12, 13], [13, 13], [13, 12], [13, 11], [13, 10], [14, 9], [14, 8], [14, 7], [14, 6], [14, 5], [15, 5]]
    let traj_10009 = [[15, 2], [14, 2], [13, 2], [14, 3], [14, 4], [14, 5], [13, 5], [12, 6], [11, 7], [10, 8], [9, 7], [8, 8], [7, 9], [6, 9], [5, 9], [4, 9], [4, 10], [4, 11], [4, 10], [4, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 8], [11, 8], [12, 8], [13, 8], [12, 9], [13, 9], [13, 10], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 10], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 10], [13, 10], [14, 10], [14, 11], [14, 10], [14, 11], [13, 12], [13, 13], [13, 14], [13, 15], [13, 16], [13, 17], [14, 18], [13, 18], [13, 19], [12, 20], [12, 21], [12, 22], [12, 23], [12, 24], [12, 25], [11, 25], [10, 25], [9, 25], [8, 25], [7, 25], [7, 26], [7, 27], [8, 27], [9, 27], [10, 27], [10, 26], [10, 25], [11, 25], [11, 24], [11, 23], [11, 22], [11, 21], [12, 21], [12, 20], [13, 20], [14, 20], [14, 19], [14, 18], [14, 17], [14, 16], [14, 15], [14, 14], [14, 13], [14, 12], [14, 11], [14, 10], [14, 11], [14, 10], [13, 10], [12, 9], [11, 9], [10, 9], [9, 9], [8, 9], [7, 9], [6, 8], [5, 9], [4, 9], [4, 10], [4, 9], [5, 8], [6, 8], [7, 8], [8, 7], [9, 6], [10, 6], [11, 6], [12, 6], [13, 6], [14, 6], [14, 5], [14, 4], [14, 5], [14, 6], [14, 7], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [14, 12], [14, 13], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18], [13, 19], [12, 19], [12, 20], [12, 21], [11, 21], [10, 21], [11, 21], [12, 21], [12, 20], [12, 19], [12, 18], [13, 17], [13, 16], [14, 15], [15, 15]]
    let traj_10010 = [[13, 0], [13, 1], [14, 2], [14, 3], [13, 4], [14, 4], [13, 5], [12, 6], [11, 6], [10, 6], [9, 6], [8, 6], [7, 6], [7, 5], [7, 4], [7, 3], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [5, 9], [4, 9], [4, 10], [4, 9], [5, 9], [6, 8], [7, 9], [8, 9], [9, 9], [10, 9], [11, 9], [12, 9], [13, 10], [14, 11], [14, 10], [14, 11], [14, 10], [14, 9], [14, 8], [14, 7], [14, 6], [14, 5], [15, 4], [15, 3], [15, 4], [14, 4], [14, 5], [14, 6], [14, 7], [14, 8], [14, 9], [14, 10], [14, 11], [14, 10], [14, 11], [13, 11], [13, 10], [12, 10], [11, 9], [10, 9], [9, 9], [9, 10], [8, 10], [7, 10], [7, 9], [6, 9], [5, 9], [4, 9], [4, 10], [4, 11], [4, 10], [4, 9], [5, 8], [6, 7], [7, 6], [7, 5], [7, 6], [7, 7], [7, 8], [7, 9], [8, 9], [9, 8], [10, 7], [11, 6], [12, 6], [13, 6], [14, 5], [15, 5]]

    function getDistance(point1,point2) {
        if(point1[0] - point2[0] === 0)
            return Math.abs(point2[0] - point1[0]);
        else{
            let _x = Math.abs(point1[0] - point2[0]);
            let _y = Math.abs(point1[1] - point2[1]);
            return Math.sqrt(_x * _x + _y * _y);
        }
    }

    function get_crosspoint(point1,point2,point) {

        let P;
        //如果是条竖着的线
        if(point1[0]-point2[0] === 0)
            P = [point1[0],point[1]];
        else {
            let A=(point1[1] - point2[1])/(point1[0]-point2[0]);
            let B=point1[1]-A*point1[0];
            let m=point[0]+A*point[1];

            let x=(m-A*B)/(A*A+1);
            let y=A*x+B;

            P = [x,y];
        }
        //console.log(P);
        return P;
    }

    function MDL(tr){
        let cp = [];//特征点
        cp.push(tr[0]); //add first point
        //for(let i = )
        cp.push(tr[tr.length-1]);  //add last point
        //console.log(cp.length,cp);
        return cp;
    }

    let floor_svg = d3.select("#all_view")
        .append("svg")
        .attr("id", "floor_svg")
        .attr("width", width)
        .attr("height", height)
        .style({
            "position":"absolute",
            //'left':"100px"
            "background":"#8f8f8f",
            "opacity":0.6
        });

    let floor_g = floor_svg.append("g");

    let line = d3.svg.line()
        .x(function(d) { return d[1]* gridSize_w + gridSize_w/2; })
        .y(function(d) { return d[0]* gridSize_h + gridSize_h/2; })
        .interpolate("linear");

    draw_floor();

    //draw_path();

    draw_nodes(traj_10004,"#3e9929");
    draw_path(traj_10004,"#3e9929");
    let mdl_traj = MDL(traj_10004);
    draw_nodes(mdl_traj,"#ff3730");
    draw_path(mdl_traj,"#ff3730");

    //MDL(traj_10002,2);
    //MDL(traj_10003,3);
    //MDL(traj_10004,4);


    function draw_floor() {
        let floor1_cards = floor_g.selectAll(".grid")
            .data(floor_data)
            .enter()
            .append("rect")
            .attr("class", "grid")
            // .attr("rx",2)
            // .attr("ry",2)
            .attr("x", function (d) {
                return d.x * gridSize_w;
            })
            .attr("y", function (d) {
                return d.y * gridSize_h;
            })
            .attr("width", gridSize_w)
            .attr("height", gridSize_h)
            .style({
                "fill": "#999999"
            });
    }
    //==================================
    function draw_nodes(data,color) {

        let nodes_g = floor_svg.append("g");

        let floor_nodes = nodes_g.selectAll(".node")
            .data(data)
            .enter()
            .append("circle")
            .attr("class", "node")
            .attr("cx", function (d) {
                return d[1] * gridSize_w + gridSize_w/2;
            })
            .attr("cy", function (d) {
                return d[0] * gridSize_h + gridSize_h/2;
            })
            .attr("r", 5)
            .style({
                "fill": color
            });
    }
    //==================================
    function draw_path(data,color) {

        let path_g = floor_svg.append("g");

        /*    ==========================================  ==============
         linear - 线性插值
         linear-closed - 线性插值，封闭起点和终点形成多边形
         step - 步进插值，曲线只能沿x轴和y轴交替伸展
         step-before - 步进插值，曲线只能沿y轴和x轴交替伸展
         step-after - 同step
         basis - B样条插值
         basis-open - B样条插值，起点终点不相交
         basis-closed - B样条插值，连接起点终点形成多边形
         bundle - 基本等效于basis，除了有额外的tension参数用于拉直样条
         cardinal - Cardina样条插值
         cardinal-open - Cardina样条插值，起点终点不相交
         cardinal-closed - Cardina样条插值，连接起点终点形成多边形
         monotone - 立方插值，保留y方向的单调性
         ====================================================================*/

        let lineGraph = path_g.append("path")
            .attr("d", line(data))
            .attr("stroke", color)
            .attr("stroke-width", 2)
            .attr("fill", "none");
    }

    let trj = [],index=0;
    let interval = setInterval(function () {
        trj.push(test_traj[index]);
        index++;
        if(index>test_traj.length-1)
            clearInterval(interval);
        path_g1.selectAll('path').attr('d',line(trj))

    },200);

    function remove_element(arr) {

        let data=[];
        data.push(arr[0]);
        for(let i =1;i<arr.length;i++) {
            if(arr[i].area === data[data.length-1].area){
            }
            else
                data.push(arr[i]);
        }
        return data;
    }

}


